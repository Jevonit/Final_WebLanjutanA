{"ast":null,"code":"var _jsxFileName = \"D:\\\\Semester 4\\\\Tugas\\\\Web Lanjutan\\\\Final_WebLanjutanA\\\\frontend\\\\src\\\\components\\\\Applications\\\\ApplicationList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getApplicationsByUser, getJobPost } from '../../services/api';\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApplicationList = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [applications, setApplications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchApplications = async () => {\n      if (!user || !user._id) return;\n      console.log('Current user context:', user); // DEBUG\n      setLoading(true);\n      setError(null);\n      try {\n        // Pastikan userId integer\n        const userId = typeof user._id === 'string' ? parseInt(user._id, 10) : user._id;\n        const data = await getApplicationsByUser(userId);\n        console.log('API response:', data); // DEBUG\n        // Ambil detail job post untuk setiap application\n        const appsWithJob = await Promise.all((data.items || data.data || []).map(async app => {\n          let jobTitle = '';\n          let company = '';\n          try {\n            const job = await getJobPost(app.job_post_id);\n            jobTitle = job.title;\n            company = job.company;\n          } catch {\n            jobTitle = `Job #${app.job_post_id}`;\n            company = '-';\n          }\n          return {\n            ...app,\n            job_post_title: jobTitle,\n            job_post_company: company\n          };\n        }));\n        setApplications(appsWithJob);\n      } catch (err) {\n        setError(err.message || 'Failed to fetch applications');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchApplications();\n  }, [user]);\n\n  // Fungsi untuk download CV dari base64\n  const handleDownloadCV = (filename, base64, mimeType = 'application/pdf') => {\n    const link = document.createElement('a');\n    link.href = `data:${mimeType};base64,${base64}`;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center py-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center text-red-500 py-8\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-x-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"My Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), applications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8 text-gray-500\",\n      children: \"No applications found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Applied At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: applications.map(app => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: app.job_post_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: app.job_post_company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: app.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: app.cv_filename ? /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: \"text-blue-600 underline\",\n              onClick: () => handleDownloadCV(app.cv_filename, app.cv_base64),\n              children: app.cv_filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 41\n            }, this) : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: app.created_at ? new Date(app.created_at).toLocaleDateString() : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this)]\n        }, app._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(ApplicationList, \"pUZXu0fr1MWgKk8QvM6qcTDV+2s=\", false, function () {\n  return [useAuth];\n});\n_c = ApplicationList;\nexport default ApplicationList;\nvar _c;\n$RefreshReg$(_c, \"ApplicationList\");","map":{"version":3,"names":["React","useEffect","useState","getApplicationsByUser","getJobPost","useAuth","jsxDEV","_jsxDEV","ApplicationList","_s","user","applications","setApplications","loading","setLoading","error","setError","fetchApplications","_id","console","log","userId","parseInt","data","appsWithJob","Promise","all","items","map","app","jobTitle","company","job","job_post_id","title","job_post_title","job_post_company","err","message","handleDownloadCV","filename","base64","mimeType","link","document","createElement","href","download","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","status","cv_filename","onClick","cv_base64","created_at","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/Semester 4/Tugas/Web Lanjutan/Final_WebLanjutanA/frontend/src/components/Applications/ApplicationList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getApplicationsByUser, getJobPost } from '../../services/api';\nimport { useAuth } from '../../context/AuthContext';\n\nconst ApplicationList = () => {\n    const { user } = useAuth();\n    const [applications, setApplications] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchApplications = async () => {\n            if (!user || !user._id) return;\n            console.log('Current user context:', user); // DEBUG\n            setLoading(true);\n            setError(null);\n            try {\n                // Pastikan userId integer\n                const userId = typeof user._id === 'string' ? parseInt(user._id, 10) : user._id;\n                const data = await getApplicationsByUser(userId);\n                console.log('API response:', data); // DEBUG\n                // Ambil detail job post untuk setiap application\n                const appsWithJob = await Promise.all(\n                    (data.items || data.data || []).map(async (app) => {\n                        let jobTitle = '';\n                        let company = '';\n                        try {\n                            const job = await getJobPost(app.job_post_id);\n                            jobTitle = job.title;\n                            company = job.company;\n                        } catch {\n                            jobTitle = `Job #${app.job_post_id}`;\n                            company = '-';\n                        }\n                        return {\n                            ...app,\n                            job_post_title: jobTitle,\n                            job_post_company: company\n                        };\n                    })\n                );\n                setApplications(appsWithJob);\n            } catch (err) {\n                setError(err.message || 'Failed to fetch applications');\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchApplications();\n    }, [user]);\n\n    // Fungsi untuk download CV dari base64\n    const handleDownloadCV = (filename, base64, mimeType = 'application/pdf') => {\n        const link = document.createElement('a');\n        link.href = `data:${mimeType};base64,${base64}`;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    if (loading) return <div className=\"text-center py-8\">Loading...</div>;\n    if (error) return <div className=\"text-center text-red-500 py-8\">{error}</div>;\n\n    return (\n        <div className=\"overflow-x-auto\">\n            <h2 className=\"text-2xl font-bold mb-4\">My Applications</h2>\n            {applications.length === 0 ? (\n                <div className=\"text-center py-8 text-gray-500\">No applications found.</div>\n            ) : (\n                <table className=\"table w-full\">\n                    <thead>\n                        <tr>\n                            <th>Job Title</th>\n                            <th>Company</th>\n                            <th>Status</th>\n                            <th>CV</th>\n                            <th>Applied At</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {applications.map(app => (\n                            <tr key={app._id}>\n                                <td>{app.job_post_title}</td>\n                                <td>{app.job_post_company}</td>\n                                <td>{app.status}</td>\n                                <td>\n                                    {app.cv_filename ? (\n                                        <a\n                                            href=\"#\"\n                                            className=\"text-blue-600 underline\"\n                                            onClick={() => handleDownloadCV(app.cv_filename, app.cv_base64)}\n                                        >\n                                            {app.cv_filename}\n                                        </a>\n                                    ) : '-'}\n                                </td>\n                                <td>{app.created_at ? new Date(app.created_at).toLocaleDateString() : '-'}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )}\n        </div>\n    );\n};\n\nexport default ApplicationList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}